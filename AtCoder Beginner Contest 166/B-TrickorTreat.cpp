/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author
 */

#include <iostream>
#include <fstream>

#include <bits/stdc++.h>


using namespace std;
//typedef long long unsigned int ll;

#define EPS (1e-7)
#define INF (1e9)
#define PI (acos(-1))

class BTrickOrTreat {
public:
void solve(std::istream& cin, std::ostream& cout) {
    int N,K;
    int ans = 0;
    //string ans = "";
    cin >> N >> K;
    int n = N;
    vector<int> vec;
    for(int i = 0;i < K; i++){
        int d;
        cin >> d;
        for(int j = 0; j < d;  j++){
            int tmp;
            cin >> tmp;
            vec.push_back(tmp);
        }
    }

    int a[n];
    for (int i = 0; i <= n; i++){ a[i] = 0; };
    for(int i = 0; i < vec.size(); i++){
        int num = vec.at(i);
        a[num - 1]++;
    }
    ans = count(a, a + N, 0);

    cout << ans << endl;
}
};


int main() {
	BTrickOrTreat solver;
	std::istream& in(std::cin);
	std::ostream& out(std::cout);
	solver.solve(in, out);
	return 0;
}
